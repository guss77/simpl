-------------------------------------------
	tclet example
-------------------------------------------
FCsoftware Inc. 1999, 2007
This code is released as open source.   We hope you find 
it useful.  If you discover a bug or add an enhancement 
contact us on the SIMPL project mailing list. 

-------------------------

=======================================
How to build the tclet example.
=======================================
This makes the assumption that you have already downloaded and
installed the latest SIMPL code.  It also makes the assumption
that you have tcl8.0 or better installed on your machine.

1) undo the SIMPL examples tarball at one directory ABOVE
$FC_HOME. ie:
	cd $FC_HOME
	cd ..
	tar -xvf <tarballname>

2) build the tclet executables
	cd $FC_HOME/examples/tclet/src
	make clobber
	make install

This will place two files in $FC_HOME/examples/bin
	$FC_HOME/examples/bin/fc.html
	$FC_HOME/examples/bin/fc.tcl

"fc.tcl" is the applet code and fc.html is the web page which embeds the
applet.

===================================
How to run the tclet example
===================================
Note: an assumption is made that you have downloaded and installed
TclPlugin v2.0 or better.   The assumption is also made that you have
installed the fcsocket.tcl package in the TclPlugin directory as per
the 
	$FC_HOME/tcl/src/readme

For this you will need to open 2 consoles (or Xterm windows).

on Console 1: logged into $FC_HOME/examples/tclet/src

	go

using the browser retrieve the fc.html file above.   This should cause the 
tclet (fc.tcl) to render.   At this point the applet has been installed
as a normal SIMPL enabled "receiver".

on Console 2: logged into $FC_HOME/examples/tclet/src

	go1 "whatever message"

What we are doing is causing a SURRO_TEST_MSG to be sent from 
"fifoSender" -> "fc.tcl".  This message will then be displayed 
on the applet screen.   When the reply is typed and the "Reply" 
button on the applet screen is pressed, the reply message is conveyed
back to the "fifoSender".


Have fun.

We have used a similar scheme to form the basis of some very powerful
Tcl/Tk applications.  
